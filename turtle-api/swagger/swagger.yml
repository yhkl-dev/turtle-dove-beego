swagger: "2.0"
info:
  title: TurtleDove API
  description: apis for turtle-dove
  version: 1.0.0
  contact:
    email: kaiyang939325@gmail.com
basePath: /v1
paths:
  /role/:
    get:
      tags:
      - role
      operationId: RoleController.Get all roles
  /user/:
    get:
      tags:
      - user
      description: Return all users
      operationId: UserController.GetAllUser
      parameters:
      - in: query
        name: page
        description: page
        type: integer
        format: int64
      - in: query
        name: page_size
        description: page_size
        type: integer
        format: int64
      - in: query
        name: UserName
        description: user_name
        type: string
      - in: query
        name: Email
        description: user_email
        type: string
      - in: query
        name: RealName
        description: user_real_name
        type: string
      - in: query
        name: IsActive
        description: "false"
        type: integer
        format: int64
      responses:
        "200":
          description: success
        "404":
          description: data not found
        "500":
          description: internal error
    put:
      tags:
      - user
      description: update user profile and password
      operationId: UserController.update user profile
      parameters:
      - in: query
        name: userID
        description: userid
        required: true
        type: integer
        format: int64
      - in: body
        name: Email
        description: "false"
        schema:
          type: string
        type: string
      - in: body
        name: UserPassword
        description: "false"
        schema:
          type: string
        type: string
      - in: body
        name: RealName
        description: "false"
        schema:
          type: string
        type: string
      responses:
        "204":
          description: ok
        "404":
          description: uer not found
        "500":
          description: parse json error
    post:
      tags:
      - user
      description: add a new user
      operationId: UserController.Add User
      parameters:
      - in: body
        name: RealName
        description: "true"
        schema:
          type: string
        type: string
      - in: body
        name: Email
        description: "true"
        schema:
          type: string
        type: string
      - in: body
        name: RealName
        description: "true"
        schema:
          type: string
        type: string
      - in: body
        name: UserPassword
        description: "true"
        schema:
          type: string
        type: string
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/services.UserService.User'
        "400":
          description: ""
    delete:
      tags:
      - user
      description: Delete user by userid
      operationId: UserController.Delete User By userID
      parameters:
      - in: query
        name: userID
        description: userid
        required: true
        type: integer
        format: int64
      responses:
        "204":
          description: success
        "400":
          description: bad request
  /user/login:
    post:
      tags:
      - user
      description: return a jwt token
      operationId: UserController.Login interface
      parameters:
      - in: body
        name: UserName
        description: user_name
        required: true
        schema:
          type: string
        type: string
      - in: body
        name: UserPassword
        description: user_password
        required: true
        schema:
          type: string
        type: string
      responses:
        "201":
          description: login success
        "401":
          description: authentication error
        "500":
          description: internal error
definitions:
  services.UserService.User:
    title: User
    type: object
tags:
- name: user
  description: |
    UserController struct, Operation for user api
- name: role
  description: |
    RoleController struct, Operation for role
